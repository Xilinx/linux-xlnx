Xilinx AMS device driver

The AMS includes an ADC as well as on-chip sensors that can be used to
sample external voltages and monitor on-die operating conditions, such as
temperature and supply voltage levels. The AMS has two SYSMON blocks.
PL-SYSMON block is capable of monitoring off chip voltage and temperature.
PL-SYSMON block has DRP, JTAG and I2C interface to enable monitoring from
external master. Out of this interface currenlty only DRP is supported.
Other block PS-SYSMON is memory mapped to PS. Both of block has built-in
alarm generation logic that is used to interrupt the processor based on
condition set.

All designs should have AMS register, but PS and PL are optional depending on
the design. The driver can work with only PS, only PL and both PS and PL
configurations. Please specify registers according to your design. DTS file
should always have AMS module property. Providing PS & PL module is optional.

Required properties:
	- compatible: Should be "xlnx,zynqmp-ams"
	- reg:  Should specify AMS register space
	- interrupts: Interrupt number for the AMS control interface
	- interrupt-names: Interrupt name, must be "ams-irq"
	- clocks: Should contain a clock specifier for the device
	- ranges: keep the property empty to map child address space
	          (for PS and/or PL) nodes 1:1 onto the parent address
	          space

AMS device tree subnode:
	- compatible: Should be "xlnx,zynqmp-ams-ps" or "xlnx,zynqmp-ams-pl"
	- reg:  Register space for PS or PL

Optional properties:

Following optional property only valid for PL.
	- xlnx,ext-channels: List of external channels that are connected to the
	                     AMS PL module.

	  The child nodes of this node represent the external channels which are
	  connected to the AMS Module. If the property is not present
	  no external channels will be assumed to be connected.

	  Each child node represents one channel and has the following
	  properties:
		Required properties:
			* reg: Pair of pins the channel is connected to.
				0: VP/VN
				1: VUSER0
				2: VUSER1
				3: VUSER3
				4: VUSER4
				5: VAUXP[0]/VAUXN[0]
				6: VAUXP[1]/VAUXN[1]
				...
				20: VAUXP[15]/VAUXN[15]
			  Note each channel number should only be used at most
			  once.
		Optional properties:
			* xlnx,bipolar: If set the channel is used in bipolar
			  mode.


Example:
	xilinx_ams: ams@ffa50000 {
		compatible = "xlnx,zynqmp-ams";
		interrupt-parent = <&gic>;
		interrupts = <0 56 4>;
		interrupt-names = "ams-irq";
		clocks = <&clkc 70>;
		reg = <0x0 0xffa50000 0x0 0x800>;
		reg-names = "ams-base";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		ams_ps: ams_ps@ffa50800 {
			compatible = "xlnx,zynqmp-ams-ps";
			reg = <0x0 0xffa50800 0x0 0x400>;
		};

		ams_pl: ams_pl@ffa50c00 {
			compatible = "xlnx,zynqmp-ams-pl";
			reg = <0x0 0xffa50c00 0x0 0x400>;
			xlnx,ext-channels {
				#address-cells = <1>;
				#size-cells = <0>;
				channel@0 {
					reg = <0>;
					xlnx,bipolar;
				};
				channel@1 {
					reg = <1>;
				};
				channel@8 {
					reg = <8>;
					xlnx,bipolar;
				};
			};
		};
	};
